/*	-------------------------------------
	:: Font Sizing
	---------------------------------- */
	// Font Size Reset to 10px Base
	@mixin font-size($sizeValue: 1.6) {
		// font-size: ($sizeValue * 10) + px;
		font-size: $sizeValue + rem;
	}

	// Strip Values
	@function strip-unit($num) {
		@return $num / ($num * 0 + 1);
	}

	// Create Header Baselines
	@mixin h1() {
		@include font-size(4.2);
		font-weight: 400;
		line-height: 1.135;
		letter-spacing: 0;
		font-family: $heading-font;
		color: $body-dark;

		.hero &,
		.dark &,
		.feature & {
			color: white;
		}

		small {
			@include font-size(1.7);
			color: white;
			letter-spacing: 0;
			margin: 0;
			line-height: 1.8;
		}

		@include min-width(650px) {
			@include font-size(4.8);
		}

		@include min-width(1001px) {
			@include font-size(5.5);
		}
	}

	@mixin h2() {
		@include font-size(2.8);
		font-weight: 400;
		line-height: 1.233333333;
		margin: 0 0 10px 0;
		font-family: $heading-font;
		color: $body-dark;

		@include min-width(501px) {
			@include font-size(3.2);
		}

		@include min-width(1001px) {
			@include font-size(3.8);
		}
	}

	@mixin h3() {
		@include font-size(2.4);
		font-weight: 400;
		line-height: 1.3;
		margin: 0 0 0.8em 0;
		font-family: $heading-font;
		color: $body-dark;

		@include min-width(501px) {
			@include font-size(2.8);
		}

		@include min-width(1001px) {
			@include font-size(3.2);
		}
	}

	@mixin h4() {
		@include font-size(1.9);
		font-family: $body-font;
		font-weight: 400;
		line-height: 1.8;
		margin: 0 0 10px 0;
		color: $body-dark;

	}

	@mixin h5() {
		@include font-size(2.1);
		font-family: $nav-font;
		text-transform: uppercase;
		letter-spacing: 1.5px;
		font-weight: 400;
		margin: 0 0 10px 0;
		color: $body-dark;
	}

	@mixin h6() {
		@include font-size(1.2);
		font-family: $button-font;
		font-weight: 600;
		display: inline-block;
		padding: 0.6rem 0.8rem 0.6rem 1.2rem;
		letter-spacing: 0.4em;
		text-transform: uppercase;
		margin: 0 auto 4rem auto;
		color: $body-dark;
		background: $gray-light;
	}




/*	-------------------------------------
	:: Move away from using extend
	---------------------------------- */
	@mixin unstyled() {
		list-style-type: none;
		padding: 0;
		margin: 0;
	}

	@mixin inline() {
		&  > li {
			display: inline-block;
			padding-right: 5px;
			padding-left: 5px;

			&:first-of-type { padding-left: 0; }
			&:last-of-type  { padding-right: 0; }
		}
	}

	@mixin display-table() {
		display: table;
		position: relative
	}

	@mixin table-cell() {
		display: table-cell
	}

	@mixin middle() {
		vertical-align: middle
	}

	@mixin group() {
		zoom: 1;
		&::before,
		&::after {
			content: "";
			display: table;
			width: 0;
		}
		&::after { clear: both; }
	}

	@mixin momentum_scrolling() {
		overflow: auto;
		-webkit-overflow-scrolling: touch;
	}

	@mixin outline() {
		&, * {
			outline: 1px solid black;
		}
	}

	@mixin add_smart_underline() {
		position: relative;
		text-shadow: 0.065em 0.065em 0px white, 0.065em -0.065em 0px white, -0.065em -0.065em 0px white, -0.065em 0.065em 0px white;

		&:after {
			content: attr(data-copy);
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			z-index: -1;
			opacity: 0;
			transition: none;
			text-decoration: underline;
			text-decoration-skip: ink;
		}

		span {
			z-index: -1;
		}
	}

	@mixin add_alt_smart_underline() {
		text-shadow: 0.065em 0.065em 0px white, 0.065em -0.065em 0px white, -0.065em -0.065em 0px white, -0.065em 0.065em 0px white;
		background-image: linear-gradient(currentColor, currentColor), linear-gradient(currentColor, currentColor), linear-gradient(currentColor, currentColor);
		background-size: .05em 1px, .05em 1px, 1px 1px;
		background-repeat: no-repeat, no-repeat, repeat-x;
		background-position: 0% 85%, 100% 85%, 0% 85%;

		&:after {
			display: none;
		}
	}

	@mixin remove_smart_underline() {
		background: none;
		text-shadow: none;

		* {
			background: none;
			text-shadow: none;
		}
	}

/*	-------------------------------------
	:: Mobile First Mixin
	---------------------------------- */
	@mixin min-width($media) {
		@media (min-width: $media) {
			@content;
		}
	}


/*	-------------------------------------
	:: Desktop First Mixin
	---------------------------------- */
	@mixin max-width($media) {
		@media (max-width: ($media - 1px)) {
			@content;
		}
	}


/*	-------------------------------------
	:: Firefox mixin
	---------------------------------- */
	@mixin firefox() {
		@-moz-document url-prefix() {
			@content;
		}
	}


/*	-------------------------------------
	:: Safari mixin
	---------------------------------- */
	@mixin safari() {
		@supports (overflow:-webkit-marquee) and (justify-content:inherit) {
			@content;
		}
	}

/*	-------------------------------------
	:: Retina mixin
	---------------------------------- */
	@mixin retina() {
		@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
			@content;
		}
	}

/*	-------------------------------------
	:: REM Fallback
	---------------------------------- */
	@mixin rem-fallback($property, $values...) {
		$max: length($values);
		$pxValues: '';
		$remValues: '';

		@for $i from 1 through $max {
			$value: strip-unit(nth($values, $i));
			$pxValues: #{$pxValues + $value*16}px;

			@if $i < $max {
				$pxValues: #{$pxValues + " "};
			}
		}

		@for $i from 1 through $max {
			$value: strip-unit(nth($values, $i));
			$remValues: #{$remValues + $value}rem;

			@if $i < $max {
				$remValues: #{$remValues + " "};
			}
		}

		#{$property}: $pxValues;
		#{$property}: $remValues;
	}
